apply plugin: 'com.android.application'
apply plugin: 'debug.helper'

android {

    signingConfigs {
        debughelper {
            keyAlias 'debughelper.jks'
            keyPassword 'qinchao'
            storeFile file('../debughelper.keystore.jks')
            storePassword 'qinchao'
        }
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "chao.app.debug"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debughelper
    }
    buildTypes {
        release {
            signingConfig signingConfigs.debughelper
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debughelper
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    testCompile 'junit:junit:4.12'
    compile project(':protocol')
    debugCompile project(':DebugHelper')
//    compile project(':lib')
}


//task printTest(type: TestTask) {
//    doFirst {
//        println("======> task started")
//    }
//    doLast {
//        println("======> task finished!")
//    }
//}

debughelper {
    debugOn = false
    debugClass = ""
    mainClass = ""
}

//task useManifest(type: ManifestTask) {
//    debugVariant = new DebugHelperVariant()
//    debugVariant.configuration = project.debughelper
//    debugVariant.variantName = "Debug"
//    debugVariant.manifestPath = "/Users/chao/codes/github/mycode/DebugHelper/app/libs/AndroidManifest.xml"
//    println "===========>  useManifest"
//}
//
//task collect(type: CollectManifestTask) {
//
//    PluginUtil.getProjectManifests(project)
//}